name: "Build"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Release
    runs-on: macos-latest

    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: 'oracle'
          java-version: '17'

      #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      #5 Install lcov
      - name: Install lcov
        run: brew install lcov

      #6 Run Tests
      - name: Run Tests
        id: test
        continue-on-error: true
        run: flutter test --coverage

      #7 Generate HTML Test Report
      - name: Generate HTML Test Report
        run: |
          genhtml coverage/lcov.info --output-directory coverage/html

      #8 Create Folder on Google Drive Based on Time (for Error Report if tests fail)
      - name: Create Folder for Test Failure Report
        if: failure()
        run: |
          FOLDER_NAME="error-report-$(date +'%Y-%m-%d_%H-%M-%S')"
          FOLDER_ID=$(curl -X POST \
            -L \
            -H "Authorization: Bearer ${{ secrets.DRIVE_CREDENTIALS }}" \
            -H "Content-Type: application/json" \
            -d '{
                  "name": "'"$FOLDER_NAME"'",
                  "mimeType": "application/vnd.google-apps.folder"
                }' \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart" \
            | jq -r '.id')

          echo "Created folder with ID: $FOLDER_ID"
          echo "FOLDER_ID=$FOLDER_ID" >> $GITHUB_ENV

      #9 Upload Test Failure Report to Google Drive
      - name: Upload Test Failure Report to Google Drive
        if: failure()
        run: |
          curl -X POST \
            -L \
            -H "Authorization: Bearer ${{ secrets.DRIVE_CREDENTIALS }}" \
            -F "metadata={name : 'test_failure_report.html', parents : ['${{ env.FOLDER_ID }}']};type=application/json" \
            -F "file=@coverage/html/index.html;type=application/octet-stream" \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"

      #10 Upload Test Log to Google Drive (Optional: to capture detailed error logs)
      - name: Upload Test Log to Google Drive
        if: failure()
        run: |
          curl -X POST \
            -L \
            -H "Authorization: Bearer ${{ secrets.DRIVE_CREDENTIALS }}" \
            -F "metadata={name : 'test_log.txt', parents : ['${{ env.FOLDER_ID }}']};type=application/json" \
            -F "file=@flutter_test_log.txt;type=application/octet-stream" \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"

      #11 Build Debug APK and AAB (Only if tests pass)
      - name: Build Debug APK and AAB
        if: success()
        run: |
          flutter build apk --debug
          flutter build appbundle --debug

      #12 Build Debug IPA (iOS Build)
      - name: Build Debug IPA
        if: success()
        run: flutter build ios --debug --no-codesign

      - name: Compress Archives and IPAs
        if: success()
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      #13 Create Folder on Google Drive Based on Time (for main build files)
      - name: Create Folder for Successful Build
        if: success()
        run: |
          FOLDER_NAME="build-$(date +'%Y-%m-%d_%H-%M-%S')"
          FOLDER_ID=$(curl -X POST \
            -L \
            -H "Authorization: Bearer ${{ secrets.DRIVE_CREDENTIALS }}" \
            -H "Content-Type: application/json" \
            -d '{
                  "name": "'"$FOLDER_NAME"'",
                  "mimeType": "application/vnd.google-apps.folder"
                }' \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart" \
            | jq -r '.id')

          echo "Created folder with ID: $FOLDER_ID"
          echo "FOLDER_ID=$FOLDER_ID" >> $GITHUB_ENV

      #14 Upload APK to Google Drive
      - name: Upload APK to Google Drive
        if: success()
        run: |
          curl -X POST \
            -L \
            -H "Authorization: Bearer ${{ secrets.DRIVE_CREDENTIALS }}" \
            -F "metadata={name : 'app-debug.apk', parents : ['${{ env.FOLDER_ID }}']};type=application/json" \
            -F "file=@build/app/outputs/flutter-apk/app-debug.apk;type=application/octet-stream" \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"

      #15 Upload AAB to Google Drive
      - name: Upload AAB to Google Drive
        if: success()
        run: |
          curl -X POST \
            -L \
            -H "Authorization: Bearer ${{ secrets.DRIVE_CREDENTIALS }}" \
            -F "metadata={name : 'app-debug.aab', parents : ['${{ env.FOLDER_ID }}']};type=application/json" \
            -F "file=@build/app/outputs/bundle/debug/app-debug.aab;type=application/octet-stream" \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"

      #16 Upload iOS Build to Google Drive
      - name: Upload iOS Build to Google Drive
        if: success()
        run: |
          curl -X POST \
            -L \
            -H "Authorization: Bearer ${{ secrets.DRIVE_CREDENTIALS }}" \
            -F "metadata={name : 'ios_build.tar.gz', parents : ['${{ env.FOLDER_ID }}']};type=application/json" \
            -F "file=@build/ios_build.tar.gz;type=application/octet-stream" \
            "https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart"
