name: "Build"

on:
  push:
    branches:
      - '**'  # Run on all branches

jobs:
  build:
    name: Build & Run Tests
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Install lcov
        run: brew install lcov

      - name: Run Tests
        id: test
        continue-on-error: true  # Ensures the workflow continues even if tests fail
        run: |
          flutter test --coverage || echo "Tests failed"

      - name: Generate Coverage Report
        run: |
          mkdir -p coverage/lcov-report
          if [ -f coverage/lcov.info ]; then
            genhtml coverage/lcov.info --output-directory=coverage/lcov-report
          else
            echo "No coverage data found, creating empty report"
            touch coverage/lcov-report/index.html
          fi

      - name: Debug: List Coverage Files
        run: ls -R coverage || echo "No coverage directory found"

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Coverage
          path: coverage/lcov-report

  build_and_upload_artifact_on_success:
    name: Build & Upload Artifacts (Success)
    runs-on: macos-latest
    needs: build
    if: success()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Debug APK, AAB, and IPA
        run: |
          flutter build apk --debug
          flutter build appbundle --debug
          flutter build ios --debug --no-codesign

      - name: Compress iOS Build Directory
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build-and-Coverage
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/bundle/debug/app-debug.aab
            build/ios_build.tar.gz
            coverage/lcov-report

  upload_build_and_coverage_in_google_drive_on_success:
    name: Upload Build and Coverage to Google Drive
    runs-on: ubuntu-latest
    needs: build_and_upload_artifact_on_success

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Build-and-Coverage
          path: artifacts

      - name: List artifacts folder before zipping
        run: ls -la artifacts

      - name: Create ZIP for Build and Coverage
        run: |
          cd artifacts
          zip -r Build-and-Coverage.zip .

      - name: Upload ZIP to Google Drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.CREDENTIALS }}
          folderId: ${{ secrets.FOLDERID }}
          filename: artifacts/Build-and-Coverage.zip

  build_and_upload_on_failure:
    name: Upload Coverage Report on Failure
    runs-on: ubuntu-latest
    needs: build
    if: failure()

    steps:
      - name: Download Coverage Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: Coverage
          path: coverage

      - name: Debug: List Coverage Files
        run: ls -R coverage || echo "No coverage directory found"

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Coverage
          path: coverage/lcov-report

  upload_coverage_in_google_drive_on_failure:
    name: Upload Coverage in Google Drive on Failure
    runs-on: ubuntu-latest
    needs: build_and_upload_on_failure

    steps:
      - name: Download Coverage Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: Coverage
          path: artifacts

      - name: Debug: Check Contents of Artifacts
        run: ls -R artifacts || echo "No artifacts found"

      - name: Create ZIP for Coverage Report
        run: |
          cd artifacts
          zip -r Coverage.zip .

      - name: Upload Coverage Report ZIP to Google Drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.CREDENTIALS }}
          folderId: ${{ secrets.FOLDERID }}
          filename: artifacts/Coverage.zip
