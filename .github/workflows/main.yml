name: "Build"

on:
  push:
    branches:
      - '**'  # This means any branch

jobs:
  build:
    name: Build & Run Tests
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Run dart_code_linter
        id: dart_code_linter
        run: dart run dart_code_linter:metrics analyze . --reporter=html --output-directory=./html_reports
        continue-on-error: false  # Ensure the build stops if lint fails

      - name: Install lcov
        run: brew install lcov

      - name: Run Tests
        id: test
        if: success()  # This ensures tests run only if linter passes
        run: flutter test --coverage

      - name: Generate Coverage Report
        if: success()  # Generate report only if tests pass
        run: |
          genhtml coverage/lcov.info --output-directory=coverage/lcov-report

  build_and_upload_on_success:
    name: Build & Upload Artifacts (Success)
    runs-on: macos-latest
    needs: build
    if: success()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.2'
          channel: 'stable'

      - name: Install Dependencies
        run: flutter pub get

      - name: Build Debug APK, AAB, and IPA
        run: |
          flutter build apk --debug
          flutter build appbundle --debug
          flutter build ios --debug --no-codesign

      - name: Compress Archives and IPAs
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      - name: Generate Artifact Version
        id: version
        run: echo "VERSION=$(git rev-parse --short HEAD)-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Upload Build Artifacts and Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: Build-and-Coverage-${{ env.VERSION }}
          path: |
            build/app/outputs/flutter-apk/app-debug.apk
            build/app/outputs/bundle/debug/app-debug.aab
            build/ios_build.tar.gz
            coverage/lcov-report

      - name: Upload Build-and-Coverage ZIP to Google Drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.CREDENTIALS }}
          folderId: ${{ secrets.FOLDERID }}
          filename: Build-and-Coverage-${{ env.VERSION }}.zip
        if: success()

  build_and_upload_on_failure:
    name: Build & Upload Coverage Report (Failure Case)
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate Artifact Version
        id: version
        run: echo "VERSION=$(git rev-parse --short HEAD)-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Coverage-${{ env.VERSION }}
          path: coverage/lcov-report

      - name: Upload Coverage Report ZIP to Google Drive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.CREDENTIALS }}
          folderId: ${{ secrets.FOLDERID }}
          filename: Coverage-${{ env.VERSION }}.zip
        if: failure()
